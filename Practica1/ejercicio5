# En cada ítem debe realizar una solución concurrente de grano grueso (utilizando <> y/o
# <await B; S>) para el siguiente problema, teniendo en cuenta las condiciones indicadas en el
# item. Existen N personas que deben imprimir un trabajo cada una.

# a) Implemente una solución suponiendo que existe una única impresora compartida por
# todas las personas, y las mismas la deben usar de a una persona a la vez, sin importar el
# orden. Existe una función Imprimir(documento) llamada por la persona que simula el uso
# de la impresora. Sólo se deben usar los procesos que representan a las Personas.

# b) Modifique la solución de (a) para el caso en que se deba respetar el orden de llegada.

# c) Modifique la solución de (a) para el caso en que se deba respetar el orden dado por el
# identificador del proceso (cuando está libre la impresora, de los procesos que han
# solicitado su uso la debe usar el que tenga menor identificador).

# d) Modifique la solución de (b) para el caso en que además hay un proceso Coordinador que
# le indica a cada persona que es su turno de usar la impresora.

# Parte a
Process Persona [id: 0..P-1]{
    Documento documento
    <Imprimir(documento)>
}

# Parte B
Cola C;
int siguiente = -1;
Process Persona [id: 0..P-1] {
    <if(siguiente == -1) siguiente = id else Agregar(C, id)>;
    <await (siguiente == id) >;
    Documento documento = Imprimir(documento);
    <if (empty(C)) siguiente = -1; else siguiente = Desencolar(C)>

}

# Parte C
Cola C;
int siguiente = -1;
Process Persona [id: 0..P-1] {
    <if(siguiente == -1) siguiente = id else Agregar(C, id)>;
    <await (siguiente == id) >;
    Documento documento = Imprimir(documento);
    <if (empty(C)) siguiente = -1; else siguiente = Desencolar(C)>

}

# Parte D
int actual = -1
Cola C;
bool ocupada = false;
Process Coordinador {
    while (true) {
        <await (!empty(C) && !ocupada)>;
        actual = Desencolar(C);
        <ocupada = true>;
    }
}
Process Persona [id: 0..P-1] {
    <Agregar(C, id)>;
    <await (actual == id)>;
    Documento documento = Imprimir(documento);
    ocupada = false;
}