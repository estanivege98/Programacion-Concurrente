#Suponga que se tiene un curso con 50 alumnos. Cada alumno debe realizar una tarea y existen 10 enunciados posibles. 
Una vez que todos los alumnos eligieron su tarea, comienzan a realizarla. Cada vez que un alumno termina su tarea, le avisa al profesor y se queda esperando 
el puntaje del grupo (depende de todos aquellos que comparten el mismo enunciado). Cuando un grupo terminó, el profesor les otorga un puntaje que representa 
el orden en que se terminó esa tarea de las 10 posibles. Nota: Para elegir la tarea suponga que existe una función elegir que le asigna una tarea a un alumno (esta función asignará 10 tareas diferentes entre 50 alumnos, es decir, que 5 alumnos tendrán la tarea 1, otros 5 la tarea 2 y así sucesivamente para las 10 tareas).

int contador[10] = ([10] 0); // Cuantos alumnos terminaron la tarea
int puntaje[1..10] = ([10] 0); // puntaje asigando a cada tarea
int orden = 0; // para dar puntajes en orden

sem mutex = 1;
sem esperaGrupo[10] = ([10] 0);
sem avisoProfesor[10] = ([10] 0);

Process Alumno[Id: 0..49] {
    int tarea = elegir(Id);
    Realizar(tarea);
    P(mutex);
    contador[tarea] = contador[tarea] + 1;
    if (contador[tarea] == 5) {
        V(avisoProfesor[tarea]);
    }
    V(mutex);
    P(esperaGrupo[tarea]);

    int miPuntaje = puntaje[tarea];
}

Process Profesor {
    int t, i;

    for i = 1 to 10 { // hay 10 grupos de tareas
        // Espera a que algún grupo termine
        P(avisoProfesor[i]);

        P(mutex);
        // da puntaje en orden de finalización
        puntaje[t] = orden;
        orden = orden + 1;
        V(mutex);
        for j = 1 to 5 {
            V(esperaGrupo[i]);
        }

    }
}