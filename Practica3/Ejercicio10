/*En un parque hay un juego para ser usada por N personas de a una a la vez y de acuerdo al orden en que llegan para solicitar su uso. 
Adem치s, hay un empleado encargado de desinfectar el juego durante 10 minutos antes de que una persona lo use. 
Cada persona al llegar espera hasta que el empleado le avisa que puede usar el juego, lo usa por un tiempo y luego lo devuelve. 
Nota: suponga que la persona tiene una funci칩n Usar_juego que simula el uso del juego; 
y el empleado una funci칩n Desinfectar_Juego que simula su trabajo. Todos los procesos deben terminar su ejecuci칩n.*/

Process Persona[id: 1..N]{
    Parque.llegada();
    Usar_juego(id);
    Parque.devolver();
}

Process Empleado{
    while(true) do{
        Desinfectar_Juego();
        Parque.Listo();
    }
}

Monitor Parque {
    int esperando = 0;
    bool juegoListo = true;
    cond esperarJuego, esperarEmpleado;

    Process llegada(){
        if(not juegoListo){
            esperando++;
            wait(esperarJuego);
        }
        else juegoListo = false;
    }

    Process devolver(){
        if(esperando > 0){
            esperando--;
            signal(esperarJuego);
        }
        else juegoListo = true;
        wait(esperarEmpleado);

    }
    Process Listo(){
        signal(esperarEmpleado);
    }
}